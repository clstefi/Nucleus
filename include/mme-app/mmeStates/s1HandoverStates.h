

 /*
 * Copyright 2021-present Infosys Limited
 *
 * SPDX-License-Identifier: Apache-2.0
 */
 
 /******************************************************
 * s1HandoverStates.h
 * This is an auto generated file.
 * Please do not edit this file.
 * All edits to be made through template source file
 * <TOP-DIR/scripts/SMCodeGen/templates/stateMachineTmpls/state.h.tt>
 ******************************************************/
 #ifndef __S1_HANDOVER__
 #define __S1_HANDOVER__

 #include "state.h"

 namespace mme {
	class IntraS1HoStart : public SM::State
	{
		public:
			/******************************************
			* Instance 
			*    Creates static instance for the state
			*******************************************/
			static IntraS1HoStart* Instance();

			/****************************************
			* IntraS1HoStart
			*    Destructor
			****************************************/
			~IntraS1HoStart();			
			
			/******************************************
			* initialize
			*  Initializes action handlers for the state
			* and next state
			******************************************/
			void initialize();

			/*****************************************
			* returns stateId
			*****************************************/
			uint16_t getStateId() const;

			/*****************************************
			* returns stateName
			*****************************************/
			const char* getStateName() const;

		protected:
			/****************************************
			* IntraS1HoStart
			*    Protected constructor
			****************************************/
			IntraS1HoStart();  
	};
	
	class S1HoWfHoRequestAck : public SM::State
	{
		public:
			/******************************************
			* Instance 
			*    Creates static instance for the state
			*******************************************/
			static S1HoWfHoRequestAck* Instance();

			/****************************************
			* S1HoWfHoRequestAck
			*    Destructor
			****************************************/
			~S1HoWfHoRequestAck();			
			
			/******************************************
			* initialize
			*  Initializes action handlers for the state
			* and next state
			******************************************/
			void initialize();

			/*****************************************
			* returns stateId
			*****************************************/
			uint16_t getStateId() const;

			/*****************************************
			* returns stateName
			*****************************************/
			const char* getStateName() const;

		protected:
			/****************************************
			* S1HoWfHoRequestAck
			*    Protected constructor
			****************************************/
			S1HoWfHoRequestAck();  
	};
	
	class S1HoWfHoNotify : public SM::State
	{
		public:
			/******************************************
			* Instance 
			*    Creates static instance for the state
			*******************************************/
			static S1HoWfHoNotify* Instance();

			/****************************************
			* S1HoWfHoNotify
			*    Destructor
			****************************************/
			~S1HoWfHoNotify();			
			
			/******************************************
			* initialize
			*  Initializes action handlers for the state
			* and next state
			******************************************/
			void initialize();

			/*****************************************
			* returns stateId
			*****************************************/
			uint16_t getStateId() const;

			/*****************************************
			* returns stateName
			*****************************************/
			const char* getStateName() const;

		protected:
			/****************************************
			* S1HoWfHoNotify
			*    Protected constructor
			****************************************/
			S1HoWfHoNotify();  
	};
	
	class S1HoWfModifyBearerResponse : public SM::State
	{
		public:
			/******************************************
			* Instance 
			*    Creates static instance for the state
			*******************************************/
			static S1HoWfModifyBearerResponse* Instance();

			/****************************************
			* S1HoWfModifyBearerResponse
			*    Destructor
			****************************************/
			~S1HoWfModifyBearerResponse();			
			
			/******************************************
			* initialize
			*  Initializes action handlers for the state
			* and next state
			******************************************/
			void initialize();

			/*****************************************
			* returns stateId
			*****************************************/
			uint16_t getStateId() const;

			/*****************************************
			* returns stateName
			*****************************************/
			const char* getStateName() const;

		protected:
			/****************************************
			* S1HoWfModifyBearerResponse
			*    Protected constructor
			****************************************/
			S1HoWfModifyBearerResponse();  
	};
	
	class S1HoWfTauCheck : public SM::State
	{
		public:
			/******************************************
			* Instance 
			*    Creates static instance for the state
			*******************************************/
			static S1HoWfTauCheck* Instance();

			/****************************************
			* S1HoWfTauCheck
			*    Destructor
			****************************************/
			~S1HoWfTauCheck();			
			
			/******************************************
			* initialize
			*  Initializes action handlers for the state
			* and next state
			******************************************/
			void initialize();

			/*****************************************
			* returns stateId
			*****************************************/
			uint16_t getStateId() const;

			/*****************************************
			* returns stateName
			*****************************************/
			const char* getStateName() const;

		protected:
			/****************************************
			* S1HoWfTauCheck
			*    Protected constructor
			****************************************/
			S1HoWfTauCheck();  
	};
	
	class S1HoWfTauRequest : public SM::State
	{
		public:
			/******************************************
			* Instance 
			*    Creates static instance for the state
			*******************************************/
			static S1HoWfTauRequest* Instance();

			/****************************************
			* S1HoWfTauRequest
			*    Destructor
			****************************************/
			~S1HoWfTauRequest();			
			
			/******************************************
			* initialize
			*  Initializes action handlers for the state
			* and next state
			******************************************/
			void initialize();

			/*****************************************
			* returns stateId
			*****************************************/
			uint16_t getStateId() const;

			/*****************************************
			* returns stateName
			*****************************************/
			const char* getStateName() const;

		protected:
			/****************************************
			* S1HoWfTauRequest
			*    Protected constructor
			****************************************/
			S1HoWfTauRequest();  
	};
	
};
#endif // __S1_HANDOVER__
