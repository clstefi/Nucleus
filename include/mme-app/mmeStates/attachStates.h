

 /*
 * Copyright 2021-present Infosys Limited
 *
 * SPDX-License-Identifier: Apache-2.0
 */
 
 /******************************************************
 * attachStates.h
 * This is an auto generated file.
 * Please do not edit this file.
 * All edits to be made through template source file
 * <TOP-DIR/scripts/SMCodeGen/templates/stateMachineTmpls/state.h.tt>
 ******************************************************/
 #ifndef ___ATTACH__
 #define ___ATTACH__

 #include "state.h"

 namespace mme {
	class AttachState : public SM::State
	{
		public:
			/******************************************
			* Instance 
			*    Creates static instance for the state
			*******************************************/
			static AttachState* Instance();

			/****************************************
			* AttachState
			*    Destructor
			****************************************/
			~AttachState();			
			
			/******************************************
			* initialize
			*  Initializes action handlers for the state
			* and next state
			******************************************/
			void initialize();

			/*****************************************
			* returns stateId
			*****************************************/
			uint16_t getStateId() const;

			/*****************************************
			* returns stateName
			*****************************************/
			const char* getStateName() const;

		protected:
			/****************************************
			* AttachState
			*    Protected constructor
			****************************************/
			AttachState();  
	};
	
	class AttachStart : public AttachState
	{
		public:
			/******************************************
			* Instance 
			*    Creates static instance for the state
			*******************************************/
			static AttachStart* Instance();

			/****************************************
			* AttachStart
			*    Destructor
			****************************************/
			~AttachStart();			
			
			/******************************************
			* initialize
			*  Initializes action handlers for the state
			* and next state
			******************************************/
			void initialize();

			/*****************************************
			* returns stateId
			*****************************************/
			uint16_t getStateId() const;

			/*****************************************
			* returns stateName
			*****************************************/
			const char* getStateName() const;

		protected:
			/****************************************
			* AttachStart
			*    Protected constructor
			****************************************/
			AttachStart();  
	};
	
	class AttachWfImsiValidateAction : public AttachState
	{
		public:
			/******************************************
			* Instance 
			*    Creates static instance for the state
			*******************************************/
			static AttachWfImsiValidateAction* Instance();

			/****************************************
			* AttachWfImsiValidateAction
			*    Destructor
			****************************************/
			~AttachWfImsiValidateAction();			
			
			/******************************************
			* initialize
			*  Initializes action handlers for the state
			* and next state
			******************************************/
			void initialize();

			/*****************************************
			* returns stateId
			*****************************************/
			uint16_t getStateId() const;

			/*****************************************
			* returns stateName
			*****************************************/
			const char* getStateName() const;

		protected:
			/****************************************
			* AttachWfImsiValidateAction
			*    Protected constructor
			****************************************/
			AttachWfImsiValidateAction();  
	};
	
	class AttachWfAia : public AttachState
	{
		public:
			/******************************************
			* Instance 
			*    Creates static instance for the state
			*******************************************/
			static AttachWfAia* Instance();

			/****************************************
			* AttachWfAia
			*    Destructor
			****************************************/
			~AttachWfAia();			
			
			/******************************************
			* initialize
			*  Initializes action handlers for the state
			* and next state
			******************************************/
			void initialize();

			/*****************************************
			* returns stateId
			*****************************************/
			uint16_t getStateId() const;

			/*****************************************
			* returns stateName
			*****************************************/
			const char* getStateName() const;

		protected:
			/****************************************
			* AttachWfAia
			*    Protected constructor
			****************************************/
			AttachWfAia();  
	};
	
	class AttachWfIdentityResponse : public AttachState
	{
		public:
			/******************************************
			* Instance 
			*    Creates static instance for the state
			*******************************************/
			static AttachWfIdentityResponse* Instance();

			/****************************************
			* AttachWfIdentityResponse
			*    Destructor
			****************************************/
			~AttachWfIdentityResponse();			
			
			/******************************************
			* initialize
			*  Initializes action handlers for the state
			* and next state
			******************************************/
			void initialize();

			/*****************************************
			* returns stateId
			*****************************************/
			uint16_t getStateId() const;

			/*****************************************
			* returns stateName
			*****************************************/
			const char* getStateName() const;

		protected:
			/****************************************
			* AttachWfIdentityResponse
			*    Protected constructor
			****************************************/
			AttachWfIdentityResponse();  
	};
	
	class AttachWfAuthResp : public AttachState
	{
		public:
			/******************************************
			* Instance 
			*    Creates static instance for the state
			*******************************************/
			static AttachWfAuthResp* Instance();

			/****************************************
			* AttachWfAuthResp
			*    Destructor
			****************************************/
			~AttachWfAuthResp();			
			
			/******************************************
			* initialize
			*  Initializes action handlers for the state
			* and next state
			******************************************/
			void initialize();

			/*****************************************
			* returns stateId
			*****************************************/
			uint16_t getStateId() const;

			/*****************************************
			* returns stateName
			*****************************************/
			const char* getStateName() const;

		protected:
			/****************************************
			* AttachWfAuthResp
			*    Protected constructor
			****************************************/
			AttachWfAuthResp();  
	};
	
	class AttachWfAuthRespValidate : public AttachState
	{
		public:
			/******************************************
			* Instance 
			*    Creates static instance for the state
			*******************************************/
			static AttachWfAuthRespValidate* Instance();

			/****************************************
			* AttachWfAuthRespValidate
			*    Destructor
			****************************************/
			~AttachWfAuthRespValidate();			
			
			/******************************************
			* initialize
			*  Initializes action handlers for the state
			* and next state
			******************************************/
			void initialize();

			/*****************************************
			* returns stateId
			*****************************************/
			uint16_t getStateId() const;

			/*****************************************
			* returns stateName
			*****************************************/
			const char* getStateName() const;

		protected:
			/****************************************
			* AttachWfAuthRespValidate
			*    Protected constructor
			****************************************/
			AttachWfAuthRespValidate();  
	};
	
	class AttachWfSecCmp : public AttachState
	{
		public:
			/******************************************
			* Instance 
			*    Creates static instance for the state
			*******************************************/
			static AttachWfSecCmp* Instance();

			/****************************************
			* AttachWfSecCmp
			*    Destructor
			****************************************/
			~AttachWfSecCmp();			
			
			/******************************************
			* initialize
			*  Initializes action handlers for the state
			* and next state
			******************************************/
			void initialize();

			/*****************************************
			* returns stateId
			*****************************************/
			uint16_t getStateId() const;

			/*****************************************
			* returns stateName
			*****************************************/
			const char* getStateName() const;

		protected:
			/****************************************
			* AttachWfSecCmp
			*    Protected constructor
			****************************************/
			AttachWfSecCmp();  
	};
	
	class AttachWfEsmInfoCheck : public AttachState
	{
		public:
			/******************************************
			* Instance 
			*    Creates static instance for the state
			*******************************************/
			static AttachWfEsmInfoCheck* Instance();

			/****************************************
			* AttachWfEsmInfoCheck
			*    Destructor
			****************************************/
			~AttachWfEsmInfoCheck();			
			
			/******************************************
			* initialize
			*  Initializes action handlers for the state
			* and next state
			******************************************/
			void initialize();

			/*****************************************
			* returns stateId
			*****************************************/
			uint16_t getStateId() const;

			/*****************************************
			* returns stateName
			*****************************************/
			const char* getStateName() const;

		protected:
			/****************************************
			* AttachWfEsmInfoCheck
			*    Protected constructor
			****************************************/
			AttachWfEsmInfoCheck();  
	};
	
	class AttachWfEsmInfoResp : public AttachState
	{
		public:
			/******************************************
			* Instance 
			*    Creates static instance for the state
			*******************************************/
			static AttachWfEsmInfoResp* Instance();

			/****************************************
			* AttachWfEsmInfoResp
			*    Destructor
			****************************************/
			~AttachWfEsmInfoResp();			
			
			/******************************************
			* initialize
			*  Initializes action handlers for the state
			* and next state
			******************************************/
			void initialize();

			/*****************************************
			* returns stateId
			*****************************************/
			uint16_t getStateId() const;

			/*****************************************
			* returns stateName
			*****************************************/
			const char* getStateName() const;

		protected:
			/****************************************
			* AttachWfEsmInfoResp
			*    Protected constructor
			****************************************/
			AttachWfEsmInfoResp();  
	};
	
	class AttachWfUla : public AttachState
	{
		public:
			/******************************************
			* Instance 
			*    Creates static instance for the state
			*******************************************/
			static AttachWfUla* Instance();

			/****************************************
			* AttachWfUla
			*    Destructor
			****************************************/
			~AttachWfUla();			
			
			/******************************************
			* initialize
			*  Initializes action handlers for the state
			* and next state
			******************************************/
			void initialize();

			/*****************************************
			* returns stateId
			*****************************************/
			uint16_t getStateId() const;

			/*****************************************
			* returns stateName
			*****************************************/
			const char* getStateName() const;

		protected:
			/****************************************
			* AttachWfUla
			*    Protected constructor
			****************************************/
			AttachWfUla();  
	};
	
	class AttachWfCsResp : public AttachState
	{
		public:
			/******************************************
			* Instance 
			*    Creates static instance for the state
			*******************************************/
			static AttachWfCsResp* Instance();

			/****************************************
			* AttachWfCsResp
			*    Destructor
			****************************************/
			~AttachWfCsResp();			
			
			/******************************************
			* initialize
			*  Initializes action handlers for the state
			* and next state
			******************************************/
			void initialize();

			/*****************************************
			* returns stateId
			*****************************************/
			uint16_t getStateId() const;

			/*****************************************
			* returns stateName
			*****************************************/
			const char* getStateName() const;

		protected:
			/****************************************
			* AttachWfCsResp
			*    Protected constructor
			****************************************/
			AttachWfCsResp();  
	};
	
	class AttachWfInitCtxtRespAttCmp : public AttachState
	{
		public:
			/******************************************
			* Instance 
			*    Creates static instance for the state
			*******************************************/
			static AttachWfInitCtxtRespAttCmp* Instance();

			/****************************************
			* AttachWfInitCtxtRespAttCmp
			*    Destructor
			****************************************/
			~AttachWfInitCtxtRespAttCmp();			
			
			/******************************************
			* initialize
			*  Initializes action handlers for the state
			* and next state
			******************************************/
			void initialize();

			/*****************************************
			* returns stateId
			*****************************************/
			uint16_t getStateId() const;

			/*****************************************
			* returns stateName
			*****************************************/
			const char* getStateName() const;

		protected:
			/****************************************
			* AttachWfInitCtxtRespAttCmp
			*    Protected constructor
			****************************************/
			AttachWfInitCtxtRespAttCmp();  
	};
	
	class AttachWfInitCtxtResp : public AttachState
	{
		public:
			/******************************************
			* Instance 
			*    Creates static instance for the state
			*******************************************/
			static AttachWfInitCtxtResp* Instance();

			/****************************************
			* AttachWfInitCtxtResp
			*    Destructor
			****************************************/
			~AttachWfInitCtxtResp();			
			
			/******************************************
			* initialize
			*  Initializes action handlers for the state
			* and next state
			******************************************/
			void initialize();

			/*****************************************
			* returns stateId
			*****************************************/
			uint16_t getStateId() const;

			/*****************************************
			* returns stateName
			*****************************************/
			const char* getStateName() const;

		protected:
			/****************************************
			* AttachWfInitCtxtResp
			*    Protected constructor
			****************************************/
			AttachWfInitCtxtResp();  
	};
	
	class AttachWfAttCmp : public AttachState
	{
		public:
			/******************************************
			* Instance 
			*    Creates static instance for the state
			*******************************************/
			static AttachWfAttCmp* Instance();

			/****************************************
			* AttachWfAttCmp
			*    Destructor
			****************************************/
			~AttachWfAttCmp();			
			
			/******************************************
			* initialize
			*  Initializes action handlers for the state
			* and next state
			******************************************/
			void initialize();

			/*****************************************
			* returns stateId
			*****************************************/
			uint16_t getStateId() const;

			/*****************************************
			* returns stateName
			*****************************************/
			const char* getStateName() const;

		protected:
			/****************************************
			* AttachWfAttCmp
			*    Protected constructor
			****************************************/
			AttachWfAttCmp();  
	};
	
	class AttachWfMbResp : public AttachState
	{
		public:
			/******************************************
			* Instance 
			*    Creates static instance for the state
			*******************************************/
			static AttachWfMbResp* Instance();

			/****************************************
			* AttachWfMbResp
			*    Destructor
			****************************************/
			~AttachWfMbResp();			
			
			/******************************************
			* initialize
			*  Initializes action handlers for the state
			* and next state
			******************************************/
			void initialize();

			/*****************************************
			* returns stateId
			*****************************************/
			uint16_t getStateId() const;

			/*****************************************
			* returns stateName
			*****************************************/
			const char* getStateName() const;

		protected:
			/****************************************
			* AttachWfMbResp
			*    Protected constructor
			****************************************/
			AttachWfMbResp();  
	};
	
};
#endif // ___ATTACH__
